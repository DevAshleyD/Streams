{"ast":null,"code":"var _jsxFileName = \"/home/vinay/Streams/Client/src/components/streams/StreamShow.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport flv from 'flv.js';\nimport { fetchStream } from '../../actions';\n\nclass StreamShow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.props.fetchStream(id);\n    this.buildPlayer();\n  }\n\n  componentDidUpdate() {\n    this.buildPlayer();\n  }\n\n  componentWillMount() {\n    this.player.destroy();\n  }\n\n  buildPlayer() {\n    if (this.player || !this.props.stream) {\n      return;\n    }\n\n    const id = this.props.match.params.id;\n    this.player = flv.createPlayer({\n      type: 'flv',\n      url: \"http://localhost:8000/live/\".concat(id, \".flv\")\n    });\n    this.player.attachMediaElement(this.videoRef.current);\n    this.player.load();\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    const _this$props$stream = this.props.stream,\n          title = _this$props$stream.title,\n          description = _this$props$stream.description;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      ref: this.videoRef,\n      style: {\n        width: '100%'\n      },\n      controls: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, title), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, description));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["/home/vinay/Streams/Client/src/components/streams/StreamShow.js"],"names":["React","connect","flv","fetchStream","StreamShow","Component","constructor","props","videoRef","createRef","componentDidMount","id","match","params","buildPlayer","componentDidUpdate","componentWillMount","player","destroy","stream","createPlayer","type","url","attachMediaElement","current","load","render","title","description","width","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgBR,KAAK,CAACS,SAAN,EAAhB;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAAA,UACRC,EADQ,GACD,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MADhB,CACRF,EADQ;AAEhB,SAAKJ,KAAL,CAAWJ,WAAX,CAAuBQ,EAAvB;AACA,SAAKG,WAAL;AAEH;;AACDC,EAAAA,kBAAkB,GAAG;AACjB,SAAKD,WAAL;AACH;;AACDE,EAAAA,kBAAkB,GAAG;AACjB,SAAKC,MAAL,CAAYC,OAAZ;AACH;;AACDJ,EAAAA,WAAW,GAAE;AACT,QAAK,KAAKG,MAAL,IAAe,CAAC,KAAKV,KAAL,CAAWY,MAAhC,EAAwC;AACpC;AACH;;AAHQ,UAIDR,EAJC,GAIM,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAJvB,CAIDF,EAJC;AAKT,SAAKM,MAAL,GAAcf,GAAG,CAACkB,YAAJ,CAAiB;AAC3BC,MAAAA,IAAI,EAAC,KADsB;AAE3BC,MAAAA,GAAG,uCAAgCX,EAAhC;AAFwB,KAAjB,CAAd;AAIA,SAAKM,MAAL,CAAYM,kBAAZ,CAA+B,KAAKf,QAAL,CAAcgB,OAA7C;AACA,SAAKP,MAAL,CAAYQ,IAAZ;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,QAAG,CAAC,KAAKnB,KAAL,CAAWY,MAAf,EAAsB;AAClB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;;AAHI,+BAI0B,KAAKZ,KAAL,CAAWY,MAJrC;AAAA,UAIGQ,KAJH,sBAIGA,KAJH;AAAA,UAIUC,WAJV,sBAIUA,WAJV;AAKL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,GAAG,EAAE,KAAKpB,QAAjB;AAA2B,MAAA,KAAK,EAAE;AAACqB,QAAAA,KAAK,EAAC;AAAP,OAAlC;AAAkD,MAAA,QAAQ,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,KAAL,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,WAAL,CAHJ,CADJ;AAOH;;AAzCoC;;AA2CzC,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AAAEb,IAAAA,MAAM,EAAEY,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACpB,KAAT,CAAeC,MAAf,CAAsBF,EAApC;AAAV,GAAP;AAEH,CAHD;;AAKA,eAAeV,OAAO,CAAE6B,eAAF,EAAmB;AAAE3B,EAAAA;AAAF,CAAnB,CAAP,CAA2CC,UAA3C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport flv from 'flv.js';\nimport { fetchStream } from '../../actions';\n\nclass StreamShow extends React.Component {\n    constructor(props){\n        super(props);\n        this.videoRef = React.createRef();\n    }\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        this.props.fetchStream(id);\n        this.buildPlayer();\n       \n    }\n    componentDidUpdate() {\n        this.buildPlayer();\n    }\n    componentWillMount() {\n        this.player.destroy();\n    }\n    buildPlayer(){\n        if ( this.player || !this.props.stream ){\n            return;\n        }\n        const { id } = this.props.match.params;\n        this.player = flv.createPlayer({\n            type:'flv',\n            url: `http://localhost:8000/live/${id}.flv`\n        });\n        this.player.attachMediaElement(this.videoRef.current);\n        this.player.load();\n    }\n    render() {\n        if(!this.props.stream){\n            return <div>Loading...</div>\n        }\n        const { title, description } = this.props.stream;\n        return (\n            <div>\n                <video ref={this.videoRef} style={{width:'100%'}} controls/>\n                <h1>{title}</h1>\n                <h5>{description}</h5>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n    return { stream: state.streams[ownProps.match.params.id]}\n\n};\n\nexport default connect (mapStateToProps, { fetchStream })(StreamShow);"]},"metadata":{},"sourceType":"module"}