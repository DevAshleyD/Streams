{"ast":null,"code":"var _jsxFileName = \"/home/vinay/Streams/Client/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\nimport { Stream } from 'stream';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return React.createElement(\"div\", {\n        className: \"right floated content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        className: \"ui button negative\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Delete\"));\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return React.createElement(\"div\", {\n        className: \"item\",\n        key: \"id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.renderAdmin(stream), React.createElement(\"i\", {\n        className: \"large middle aligned icon camera \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, stream.title, React.createElement(\"div\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, stream.description)));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Streams\"), React.createElement(\"div\", {\n      className: \"ui celled list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.renderList()));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/home/vinay/Streams/Client/src/components/streams/StreamList.js"],"names":["React","connect","fetchStreams","Stream","StreamList","Component","componentDidMount","props","renderAdmin","stream","userId","currentUserId","renderList","streams","map","title","description","render","mapStateToProps","state","Object","values","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACrCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWL,YAAX;AACH;;AACDM,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACf,QAAIA,MAAM,CAACC,MAAP,KAAkB,KAAKH,KAAL,CAAWI,aAAjC,EAA+C;AAC3C,aACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAII;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,CADJ;AAWH;AAEJ;;AACDC,EAAAA,UAAU,GAAE;AACR,WAAO,KAAKL,KAAL,CAAWM,OAAX,CAAmBC,GAAnB,CAAuBL,MAAM,IAAI;AACpC,aACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,KAAKD,WAAL,CAAiBC,MAAjB,CADN,EAEE;AAAG,QAAA,SAAS,EAAC,mCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIA,MAAM,CAACM,KADX,EAEI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIN,MAAM,CAACO,WADX,CAFJ,CAHJ,CADJ;AAaH,KAdM,CAAP;AAeH;;AACDC,EAAAA,MAAM,GAAG;AACP,WACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,KAAKL,UAAL,EAAlC,CAFF,CADN;AAUD;;AAhDoC;;AAiDxC;;AACD,MAAMM,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHN,IAAAA,OAAO,EAAEO,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACN,OAApB,CADN;AAEHF,IAAAA,aAAa,EAAEQ,KAAK,CAACG,IAAN,CAAWZ;AAFvB,GAAP;AAKH,CAND;;AAQA,eAAeT,OAAO,CAACiB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAA0CE,UAA1C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\nimport { Stream } from 'stream';\n\nclass StreamList extends React.Component {  \n    componentDidMount(){\n        this.props.fetchStreams();\n    }  \n    renderAdmin(stream){\n        if (stream.userId === this.props.currentUserId){\n            return (\n                <div className=\"right floated content\">\n                    <button className=\"ui button primary\">\n                        Edit\n                    </button>\n                    <button className=\"ui button negative\">\n                        Delete\n                    </button>\n                </div>\n\n            );\n        }\n\n    }\n    renderList(){\n        return this.props.streams.map(stream => {\n            return (\n                <div className=\"item\" key=\"id\">\n                    { this.renderAdmin(stream)}\n                  <i className=\"large middle aligned icon camera \" />\n                    <div className=\"content\">\n                      { stream.title}\n                        <div className=\"description\">\n                          { stream.description}\n                        </div>\n                    </div>\n                    \n               </div>\n            );\n        });\n    }\n    render() {\n      return(\n            <div>\n              <h2>Streams</h2>\n              <div className=\"ui celled list\">{ this.renderList()}</div>\n            </div>\n            \n        \n        \n        )\n\n    };  \n};\nconst mapStateToProps = (state) => {\n    return {\n        streams: Object.values(state.streams),\n        currentUserId: state.auth.userId\n        \n    };\n}\n\nexport default connect(mapStateToProps, { fetchStreams})(StreamList);"]},"metadata":{},"sourceType":"module"}